<Fluent:RibbonWindow x:Class="disk_editor.NVRAMView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:self="clr-namespace:disk_editor"
        xmlns:tree="clr-namespace:Aga.Controls.Tree;assembly=Aga.Controls"
        Title="WebTV NVRAM" ResizeMode="CanResize" WindowStartupLocation="CenterOwner" Height="625" MinHeight="605">
    <Window.Resources>
        <self:ObjectLocationNameConverter x:Key="ObjectLocationNameConverter" />
        <self:NVRAMCurrentValueConverter x:Key="NVRAMCurrentValueConverter" />
        <self:IsEqualConverter x:Key="IsEqualConverter" />
    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type Fluent:RibbonWindow}" BasedOn="{StaticResource {x:Type Fluent:RibbonWindow}}">
            <Setter Property="Width" Value="720"/>
            <Setter Property="MinWidth" Value="720"/>
            <Setter Property="MaxWidth" Value="720"/>
            <Setter Property="Icon" Value="static/images/build-info.png"/>
        </Style>
    </Window.Style>
    <Grid Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="51"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="44"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center" Width="480">
            <Label Content="NVRAM Location:" VerticalAlignment="Top" HorizontalAlignment="Left" FontWeight="Bold">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="FontFamily" Value="{StaticResource WindowFontFamily}"/>
                        <Setter Property="FontWeight" Value="{StaticResource WindowFontWeight}"/>
                        <Setter Property="Margin" Value="0,10,0,0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding nvram_dialog.OnlyInfo}" Value="False">
                                <Setter Property="Margin" Value="0,10,0,0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox ItemsSource="{Binding nvram_dialog.NVRAMLocations, Mode=TwoWay}" SelectedIndex="0" Name="nvram_locations" SelectionChanged="on_nvram_location_change" VerticalAlignment="Top" Width="297" HorizontalAlignment="Left">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Margin" Value="114,11,0,0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding nvram_dialog.OnlyInfo}" Value="False">
                                <Setter Property="Margin" Value="114,11,0,0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type self:ObjectLocation}">
                        <Label Content="{Binding Converter={StaticResource ObjectLocationNameConverter}}" FontSize="12" Margin="0,0,0,0" Padding="0,0,0,0">
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource IsEqualConverter}">
                                                    <Binding Path="type" />
                                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type self:NVRAMView}}" Path="SelectedNVRAM" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="FontWeight" Value="ExtraBlack"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Command="{Binding select_this_nvram}" Name="select_nvram" HorizontalAlignment="Left" VerticalAlignment="Top" Width="60" Height="22">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Margin" Value="417,11,0,0"/>
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter Property="IsEnabled" Value="True"/>
                        <Setter Property="Content" Value="Select"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding nvram_dialog.IsWriting}" Value="True">
                                <Setter Property="Content" Value="Writing"/>
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding nvram_dialog.SelectedObjectLocation.type}" Value="{x:Static self:ObjectLocationType.BROWSER0_LOCATION}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding nvram_dialog.SelectedObjectLocation.type}" Value="{x:Static self:ObjectLocationType.BROWSER1_LOCATION}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding nvram_dialog.SelectedObjectLocation.selected}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding nvram_dialog.IsWriting}" Value="False"/>
                                    <Condition Binding="{Binding nvram_dialog.SelectedObjectLocation.selected}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Label Content="Checksum:" Margin="0,41,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" FontWeight="Bold">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="FontFamily" Value="{StaticResource WindowFontFamily}"/>
                        <Setter Property="FontWeight" Value="{StaticResource WindowFontWeight}"/>
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding build_dialog.OnlyInfo}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding build_dialog.OnlyInfo}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Label Name="nvram_checksum" Content="-" Margin="110,41,0,0" VerticalAlignment="Top" Width="172" HorizontalAlignment="Left">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="FontFamily" Value="{StaticResource WindowFontFamily}"/>
                        <Setter Property="FontWeight" Value="{StaticResource WindowFontWeight}"/>
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding build_dialog.OnlyInfo}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding build_dialog.OnlyInfo}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </Grid>
        <Grid Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Center" Width="480">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0">
                    <Button Content="Import Box NV" Command="{Binding import_box_command}" Width="100" Margin="0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Export Box NV" Command="{Binding export_box_command}" Width="100" Margin="0,5,0,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0,0,0">
                    <Button Content="Import SIMNV" Command="{Binding import_simnv_command}" Width="100" Margin="0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Export SIMNV" Command="{Binding export_simnv_command}" Width="100" Margin="0,5,0,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0,0,0">
                    <Button Content="Import JSON" Command="{Binding import_json_command}" Width="100" Margin="0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Export JSON" Command="{Binding export_json_command}" Width="100" Margin="0,5,0,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2" Margin="10,10,10,0">
            <ListView 
                Name="nvram_settings_list"
                VirtualizingStackPanel.IsVirtualizing="False"
                Margin="0" 
                Grid.Column="0" 
                Grid.Row="0"
                SelectionMode="Single">
                <ListView.Resources>
                    <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding edited}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundBadBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding added}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundBadBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>

                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Width="230" Header="Name">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" ToolTip="{Binding notes}">
                                            <TextBlock>
                                                <Label Content="{Binding name}" FontWeight="Bold" Foreground="{DynamicResource TitleBrush}"/>
                                            </TextBlock>
                                            <TextBlock>
                                                <Label Content="{Binding title}" FontWeight="Normal"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Value" Width="280">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type self:NVSetting}">
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" ToolTip="{Binding description}">
                                            <TextBlock Text="{Binding Converter={StaticResource NVRAMCurrentValueConverter}}" FontWeight="Normal" FontStyle="Italic" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left"/>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,5,0,0">
                                                <Button Command="{Binding ElementName=Root, Path=DataContext.copy_command}" CommandParameter="{Binding Converter={StaticResource NVRAMCurrentValueConverter}}" Content="Copy" Width="55" Margin="0,0,10,0"/>
                                                <Button Command="{Binding ElementName=Root, Path=DataContext.export_command}" CommandParameter="{Binding .}" Content="Export" Width="55" Margin="0,0,10,0">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding data_type}" Value="{x:Static self:NVDataType.BINARY_BLOB}">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <Button Command="{Binding ElementName=Root, Path=DataContext.import_command}" CommandParameter="{Binding .}" Content="Import" Width="55" Margin="0">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding data_type}" Value="{x:Static self:NVDataType.BINARY_BLOB}">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </StackPanel>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Actions" Width="149">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <Button Command="{Binding ElementName=Root, Path=DataContext.edit_command}" CommandParameter="{Binding .}" Content="Edit" Width="55" Margin="0,0,10,0"/>
                                            <Button Command="{Binding ElementName=Root, Path=DataContext.delete_command}" CommandParameter="{Binding .}" Content="Delete" Width="55" Margin="0,0,10,0"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
        <Grid Grid.Row="3" Margin="0,0,0,0">
            <Button Name="add_button" Content="Add Setting" Command="{Binding add_command}"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Margin="10,10,0,0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding nvram_dialog.IsWriting}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>            
            
            <Button Name="cancel_button" Command="{Binding cancel_command}"  HorizontalAlignment="Right" VerticalAlignment="Top" Width="75">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Margin" Value="0,10,205,0"/>
                        <Setter Property="Content" Value="Cancel"/>
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding nvram_dialog.IsWriting}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding nvram_dialog.OnlyInfo}" Value="True">
                                <Setter Property="Margin" Value="0,10,20,0"/>
                                <Setter Property="Content" Value="Close"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding nvram_dialog.OnlyInfo}" Value="False">
                                <Setter Property="Margin" Value="0,10,205,0"/>
                                <Setter Property="Content" Value="Cancel"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Name="revert_button" Command="{Binding revert_command}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="75">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Margin" Value="0,10,125,0"/>
                        <Setter Property="Content" Value="Revert"/>
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding nvram_dialog.IsImported}" Value="True"/>
                                    <Condition Binding="{Binding nvram_dialog.IsWriting}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding nvram_dialog.HasChanges}" Value="True"/>
                                    <Condition Binding="{Binding nvram_dialog.IsWriting}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding nvram_dialog.HasChanges}" Value="True"/>
                                    <Condition Binding="{Binding nvram_dialog.IsWriting}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Name="submit_button" Content="Write NVRAM" Command="{Binding write_nvram_command}" HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" Width="110" RenderTransformOrigin="0.77,0.301">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding nvram_dialog.IsImported}" Value="True"/>
                                    <Condition Binding="{Binding nvram_dialog.IsWriting}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding nvram_dialog.HasChanges}" Value="True"/>
                                    <Condition Binding="{Binding nvram_dialog.IsWriting}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding nvram_dialog.HasChanges}" Value="True"/>
                                    <Condition Binding="{Binding nvram_dialog.IsWriting}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding nvram_dialog.OnlyInfo}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding nvram_dialog.OnlyInfo}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Grid>
</Fluent:RibbonWindow>
